name: Release

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Release
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: node
    outputs:
      pr: ${{ steps.release.outputs.pr }}
      release_created: ${{ steps.release.outputs.release_created }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
      sha: ${{ steps.release.outputs.sha }}

  pr-update-dist:
    name: PR Update Dist
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.pr }}
    env:
      PR_BRANCH: ${{ fromJSON(needs.release.outputs.pr).headBranchName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_BRANCH }}
          fetch-depth: 2

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: '**/pnpm-lock.yaml'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Node Dependencies
        run: pnpm install

      - name: Bundle
        run: pnpm run bundle

      - name: Update Version In README
        shell: python
        # language=python
        run: |
          import json
          import re
          with open('./package.json') as fp:
            package = json.load(fp)
          with open('./README.md') as fp:
            readme = fp.read()
            readme = re.sub(r'(?<=MuXiu1997/run-zx@v)\d+\.\d+\.\d+.*', package['version'], readme)
          with open('./README.md', 'w') as fp:
            fp.write(readme)

      - name: Update PR
        # language="Shell Script"
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add ./README.md
          git add ./dist
          git commit --amend --no-edit
          git push --force-with-lease

      - name: Run Example
        run: gh workflow run example.yml --ref ${{ env.PR_BRANCH }}

  update-tags:
    name: Update Tags
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    steps:
      - name: Update Tags
        uses: MuXiu1997/run-zx@v0.1.0
        with:
          # language=javascript
          script: |-
            import * as github from '@actions/github'
            const octokit = github.getOctokit('${{ secrets.GITHUB_TOKEN }}')
            for (const tag in ['v${{ needs.release.outputs.major }}', 'v${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}']) {
              try { await octokit.rest.git.deleteRef({...github.context.repo, ref: `tags/${tag}`}) }
              finally { await octokit.rest.git.createRef({...github.context.repo, ref: `refs/tags/${tag}`, sha: '${{ needs.release.outputs.sha }}'}) }
            }
